{
  "info": {
    "_postman_id": "714b244d-2ca6-4fcf-b59f-dc177dac6b80",
    "name": "Wallet Service",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "21191133"
  },
  "item": [
    {
      "name": "User Balance No Cookie Error",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"the endpoint returns the expected status code\", () => {\r",
              "  const expectedStatusCode = 403;\r",
              "  pm.response.to.have.status(expectedStatusCode);\r",
              "});\r",
              "\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableCookies": true
      },
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/api/wallet",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "wallet"
          ]
        }
      },
      "response": []
    },
    {
      "name": "User Balance PUT +100.01 No Cookie error",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"the endpoint returns the expected status code\", () => {\r",
              "  const expectedStatusCode = 403;\r",
              "  pm.response.to.have.status(expectedStatusCode);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableCookies": true
      },
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"type\": \"PUT\",\r\n    \"sum\": \"100.01\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/api/wallet",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "wallet"
          ]
        }
      },
      "response": []
    },
    {
      "name": "User Balance GET -5.85  No Cookie error",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"the endpoint returns the expected status code\", () => {\r",
              "  const expectedStatusCode = 403;\r",
              "  pm.response.to.have.status(expectedStatusCode);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableCookies": true
      },
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"type\": \"GET\",\r\n    \"sum\": \"5.85\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/api/wallet",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "wallet"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Transactions No cookie",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"the endpoint returns the expected status code\", () => {\r",
              "  const expectedStatusCode = 403;\r",
              "  pm.response.to.have.status(expectedStatusCode);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableCookies": true
      },
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/api/transaction",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "transaction"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Action No cookie",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"the endpoint returns the expected status code\", () => {\r",
              "  const expectedStatusCode = 403;\r",
              "  pm.response.to.have.status(expectedStatusCode);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableCookies": true
      },
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/api/action",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "action"
          ]
        }
      },
      "response": []
    },
    {
      "name": "User Registration",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"the endpoint returns the expected status code\", () => {\r",
              "  const expectedStatusCode = 200;\r",
              "  pm.response.to.have.status(expectedStatusCode);\r",
              "});\r",
              "\r",
              "pm.test(\"test UserOutDto json\", ()=>{\r",
              " const resp = pm.response.json();\r",
              "\r",
              "  pm.expect(resp).to.have.property(\"id\");\r",
              "  pm.expect(resp).to.have.property(\"firstName\", \"F1 first Name\");\r",
              "  pm.expect(resp).to.have.property(\"lastName\", \"L2 last Name\");\r",
              "\r",
              "  console.log(\"Registration user id: \"+resp.id);\r",
              "  pm.globals.set('userId', resp.id);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"firstName\":\"F1 first Name\",\r\n    \"lastName\":\"L2 last Name\",\r\n    \"password\":\"1\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/api/user",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "user"
          ]
        }
      },
      "response": []
    },
    {
      "name": "User Login",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"the endpoint returns the expected status code\", () => {\r",
              "  const expectedStatusCode = 200;\r",
              "  pm.response.to.have.status(expectedStatusCode);\r",
              "});\r",
              "\r",
              "pm.test(\"Response contains a JSESSIONID cookie\", function() {\r",
              "    var cookie = postman.getResponseHeader(\"Set-cookie\").split(\"=\");\r",
              "\r",
              "    var cook = cookie[1];\r",
              "    pm.globals.set('sessionCookie', cook);\r",
              "    console.log('sessionCookie: ' + cook)\r",
              "\r",
              "    pm.expect(cookie[0]).eql(\"session\");\r",
              "\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableCookies": true
      },
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"password\": \"1\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/api/login",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "login"
          ]
        }
      },
      "response": []
    },
    {
      "name": "User Balance Cookie",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"the endpoint returns the expected status code\", () => {\r",
              "  const expectedStatusCode = 200;\r",
              "  pm.response.to.have.status(expectedStatusCode);\r",
              "});\r",
              "\r",
              "pm.test(\"test Balance json\", ()=>{\r",
              " const resp = pm.response.json();\r",
              "\r",
              " pm.expect(resp).to.have.property(\"balance\", 0);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableCookies": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Cookie",
            "value": "session={{sessionCookie}}; Path=/api;",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://localhost:8080/api/wallet",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "wallet"
          ]
        }
      },
      "response": []
    },
    {
      "name": "User Balance PUT +100.01",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"the endpoint returns the expected status code\", () => {\r",
              "  const expectedStatusCode = 200;\r",
              "  pm.response.to.have.status(expectedStatusCode);\r",
              "});\r",
              "\r",
              "pm.test(\"test Balance json\", ()=>{\r",
              " const resp = pm.response.json();\r",
              "\r",
              " pm.expect(resp).to.have.property(\"balance\", 100.01);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableCookies": true
      },
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Cookie",
            "value": "session={{sessionCookie}}; Path=/api;",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"type\": \"PUT\",\r\n    \"sum\": \"100.01\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/api/wallet",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "wallet"
          ]
        }
      },
      "response": []
    },
    {
      "name": "User Balance PUT +10.03",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"the endpoint returns the expected status code\", () => {\r",
              "  const expectedStatusCode = 200;\r",
              "  pm.response.to.have.status(expectedStatusCode);\r",
              "});\r",
              "\r",
              "pm.test(\"test Balance json\", ()=>{\r",
              " const resp = pm.response.json();\r",
              "\r",
              " pm.expect(resp).to.have.property(\"balance\", 110.04);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableCookies": true
      },
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Cookie",
            "value": "session={{sessionCookie}}; Path=/api;",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"type\": \"PUT\",\r\n    \"sum\": \"10.03\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/api/wallet",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "wallet"
          ]
        }
      },
      "response": []
    },
    {
      "name": "User Balance GET -5.85",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"the endpoint returns the expected status code\", () => {\r",
              "  const expectedStatusCode = 200;\r",
              "  pm.response.to.have.status(expectedStatusCode);\r",
              "});\r",
              "\r",
              "pm.test(\"test Balance json\", ()=>{\r",
              " const resp = pm.response.json();\r",
              "\r",
              " pm.expect(resp).to.have.property(\"balance\", 104.19);\r",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableCookies": true
      },
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Cookie",
            "value": "session={{sessionCookie}}; Path=/api;",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"type\": \"GET\",\r\n    \"sum\": \"5.85\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/api/wallet",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "wallet"
          ]
        }
      },
      "response": []
    },
    {
      "name": "User Balance GET -500 No Money",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"the endpoint returns the expected status code\", () => {\r",
              "  const expectedStatusCode = 400;\r",
              "  pm.response.to.have.status(expectedStatusCode);\r",
              "});\r",
              "\r",
              "pm.test(\"test Balance json\", ()=>{\r",
              " const resp = pm.response.json();\r",
              "\r",
              " pm.expect(resp).to.have.property(\"error\", \"Not have same money.\");\r",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableCookies": true
      },
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Cookie",
            "value": "session={{sessionCookie}}; Path=/api;",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"type\": \"GET\",\r\n    \"sum\": \"500\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/api/wallet",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "wallet"
          ]
        }
      },
      "response": []
    },
    {
      "name": "User all get List",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"the endpoint returns the expected status code\", () => {\r",
              "  const expectedStatusCode = 200;\r",
              "  pm.response.to.have.status(expectedStatusCode);\r",
              "});\r",
              "\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableCookies": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Cookie",
            "value": "session={{sessionCookie}}; Path=/api;",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://localhost:8080/api/user/all",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "user",
            "all"
          ]
        }
      },
      "response": []
    },
    {
      "name": "User get by ID",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"the endpoint returns the expected status code\", () => {\r",
              "  const expectedStatusCode = 200;\r",
              "  pm.response.to.have.status(expectedStatusCode);\r",
              "});\r",
              "\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableCookies": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Cookie",
            "value": "session={{sessionCookie}}; Path=/api;",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://localhost:8080/api/user/{{userId}}",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "user",
            "{{userId}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "User Error get",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"the endpoint returns the expected status code\", () => {\r",
              "  const expectedStatusCode = 400;\r",
              "  pm.response.to.have.status(expectedStatusCode);\r",
              "});\r",
              "\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableCookies": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Cookie",
            "value": "session={{sessionCookie}}; Path=/api;",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://localhost:8080/api/user/error",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "user",
            "error"
          ]
        }
      },
      "response": []
    },
    {
      "name": "User get Action",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"the endpoint returns the expected status code\", () => {\r",
              "  const expectedStatusCode = 200;\r",
              "  pm.response.to.have.status(expectedStatusCode);\r",
              "});\r",
              "\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableCookies": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Cookie",
            "value": "session={{sessionCookie}}; Path=/api;",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://localhost:8080/api/action",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "action"
          ]
        }
      },
      "response": []
    },
    {
      "name": "User get Transactions",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"the endpoint returns the expected status code\", () => {\r",
              "  const expectedStatusCode = 200;\r",
              "  pm.response.to.have.status(expectedStatusCode);\r",
              "});\r",
              "\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableCookies": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Cookie",
            "value": "session={{sessionCookie}}; Path=/api;",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://localhost:8080/api/transaction",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "transaction"
          ]
        }
      },
      "response": []
    },
    {
      "name": "User Logout",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"the endpoint returns the expected status code\", () => {\r",
              "  const expectedStatusCode = 200;\r",
              "  pm.response.to.have.status(expectedStatusCode);\r",
              "});\r",
              "\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableCookies": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Cookie",
            "value": "session={{sessionCookie}}; Path=/api;",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://localhost:8080/api/logout",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "logout"
          ]
        }
      },
      "response": []
    },
    {
      "name": "User Balance with cookie after Logout",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"the endpoint returns the expected status code\", () => {\r",
              "  const expectedStatusCode = 403;\r",
              "  pm.response.to.have.status(expectedStatusCode);\r",
              "});\r",
              "\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableCookies": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Cookie",
            "value": "session={{sessionCookie}}; Path=/api;",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://localhost:8080/api/wallet",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "wallet"
          ]
        }
      },
      "response": []
    }
  ]
}